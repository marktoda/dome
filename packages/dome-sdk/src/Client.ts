/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "./core";
import { Auth } from "./api/resources/auth/client/Client";
import { Public } from "./api/resources/public/client/Client";
import { Chat } from "./api/resources/chat/client/Client";
import { Notes } from "./api/resources/notes/client/Client";
import { Search } from "./api/resources/search/client/Client";
import { ContentGitHub } from "./api/resources/contentGitHub/client/Client";
import { ContentSync } from "./api/resources/contentSync/client/Client";
import { ContentNotion } from "./api/resources/contentNotion/client/Client";
import { Ai } from "./api/resources/ai/client/Client";

export declare namespace DomeApiClient {
    export interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class DomeApiClient {
    protected _auth: Auth | undefined;
    protected _public: Public | undefined;
    protected _chat: Chat | undefined;
    protected _notes: Notes | undefined;
    protected _search: Search | undefined;
    protected _contentGitHub: ContentGitHub | undefined;
    protected _contentSync: ContentSync | undefined;
    protected _contentNotion: ContentNotion | undefined;
    protected _ai: Ai | undefined;

    constructor(protected readonly _options: DomeApiClient.Options) {}

    public get auth(): Auth {
        return (this._auth ??= new Auth(this._options));
    }

    public get public(): Public {
        return (this._public ??= new Public(this._options));
    }

    public get chat(): Chat {
        return (this._chat ??= new Chat(this._options));
    }

    public get notes(): Notes {
        return (this._notes ??= new Notes(this._options));
    }

    public get search(): Search {
        return (this._search ??= new Search(this._options));
    }

    public get contentGitHub(): ContentGitHub {
        return (this._contentGitHub ??= new ContentGitHub(this._options));
    }

    public get contentSync(): ContentSync {
        return (this._contentSync ??= new ContentSync(this._options));
    }

    public get contentNotion(): ContentNotion {
        return (this._contentNotion ??= new ContentNotion(this._options));
    }

    public get ai(): Ai {
        return (this._ai ??= new Ai(this._options));
    }
}
