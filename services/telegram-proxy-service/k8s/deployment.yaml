apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegram-proxy-service
  labels:
    app: telegram-proxy-service
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: telegram-proxy-service
  template:
    metadata:
      labels:
        app: telegram-proxy-service
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/api/health/metrics"
        prometheus.io/port: "3000"
    spec:
      containers:
      - name: telegram-proxy-service
        image: ${DOCKER_REGISTRY}/telegram-proxy-service:${IMAGE_TAG}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: PORT
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: HOST
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: LOG_LEVEL
        - name: LOG_FORMAT
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: LOG_FORMAT
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: REDIS_PORT
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: REDIS_DB
        - name: REDIS_PREFIX
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: REDIS_PREFIX
        - name: RATE_LIMIT_WINDOW_MS
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: RATE_LIMIT_WINDOW_MS
        - name: RATE_LIMIT_MAX_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: RATE_LIMIT_MAX_REQUESTS
        - name: CLIENT_POOL_MIN_SIZE
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: CLIENT_POOL_MIN_SIZE
        - name: CLIENT_POOL_MAX_SIZE
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: CLIENT_POOL_MAX_SIZE
        - name: CLIENT_POOL_ACQUIRE_TIMEOUT_MS
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: CLIENT_POOL_ACQUIRE_TIMEOUT_MS
        - name: CLIENT_POOL_IDLE_TIMEOUT_MS
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: CLIENT_POOL_IDLE_TIMEOUT_MS
        - name: SESSION_TTL_SECONDS
          valueFrom:
            configMapKeyRef:
              name: telegram-proxy-service-config
              key: SESSION_TTL_SECONDS
        # Secret environment variables
        - name: TELEGRAM_API_ID
          valueFrom:
            secretKeyRef:
              name: telegram-proxy-service-secrets
              key: TELEGRAM_API_ID
        - name: TELEGRAM_API_HASH
          valueFrom:
            secretKeyRef:
              name: telegram-proxy-service-secrets
              key: TELEGRAM_API_HASH
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: telegram-proxy-service-secrets
              key: JWT_SECRET
        - name: JWT_EXPIRATION
          valueFrom:
            secretKeyRef:
              name: telegram-proxy-service-secrets
              key: JWT_EXPIRATION
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: telegram-proxy-service-secrets
              key: REDIS_PASSWORD
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 12
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
              - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      securityContext:
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - telegram-proxy-service
              topologyKey: kubernetes.io/hostname