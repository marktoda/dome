apiVersion: v1
kind: Secret
metadata:
  name: telegram-proxy-service-secrets
  labels:
    app: telegram-proxy-service
type: Opaque
# Note: In a real production environment, you should never commit actual secrets to version control.
# This file serves as a template. The actual secrets should be managed using a secure method like:
# - Kubernetes Secrets management tools (e.g., Sealed Secrets, External Secrets)
# - Cloud provider secret management (AWS Secrets Manager, GCP Secret Manager, Azure Key Vault)
# - HashiCorp Vault
# 
# For local development or testing, you can create a secret manually:
# kubectl create secret generic telegram-proxy-service-secrets \
#   --from-literal=TELEGRAM_API_ID=your_telegram_api_id \
#   --from-literal=TELEGRAM_API_HASH=your_telegram_api_hash \
#   --from-literal=JWT_SECRET=your_jwt_secret \
#   --from-literal=JWT_EXPIRATION=1h \
#   --from-literal=REDIS_PASSWORD=your_redis_password
#
# For CI/CD pipelines, consider using Kubernetes secrets populated from environment variables or a secrets manager.
data:
  # These are placeholder values. DO NOT use these in production!
  # The actual values should be base64 encoded:
  # echo -n "your_value" | base64
  TELEGRAM_API_ID: VEVMRUdSQU1fQVBJX0lE      # Replace with actual base64 encoded value
  TELEGRAM_API_HASH: VEVMRUdSQU1fQVBJX0hBU0g=  # Replace with actual base64 encoded value
  JWT_SECRET: SldUX1NFQ1JFVA==                # Replace with actual base64 encoded value
  JWT_EXPIRATION: MWg=                        # Replace with actual base64 encoded value (1h)
  REDIS_PASSWORD: UkVESVNfUEFTU1dPUkQ=        # Replace with actual base64 encoded value