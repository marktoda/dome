apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# Namespace where all resources will be created
namespace: communicator

# Common labels to be added to all resources
commonLabels:
  app.kubernetes.io/name: telegram-proxy-service
  app.kubernetes.io/part-of: communicator
  app.kubernetes.io/managed-by: kustomize

# Resources to be included
resources:
  - deployment.yaml
  - service.yaml
  - configmap.yaml
  - secret.yaml
  - hpa.yaml
  - ingress.yaml

# ConfigMap generators
configMapGenerator:
  - name: telegram-proxy-service-config
    behavior: merge
    literals:
      # These values can be overridden in environment-specific overlays
      - NODE_ENV=production

# Secret generators
secretGenerator:
  - name: telegram-proxy-service-secrets
    behavior: merge
    # In a real environment, these would be populated from a secure source
    # For example, using environment variables in CI/CD:
    # env:
    #   - TELEGRAM_API_ID
    #   - TELEGRAM_API_HASH
    #   - JWT_SECRET
    #   - JWT_EXPIRATION
    #   - REDIS_PASSWORD
    literals:
      # These are placeholders and should be replaced in a real environment
      - TELEGRAM_API_ID=placeholder
      - TELEGRAM_API_HASH=placeholder
      - JWT_SECRET=placeholder
      - JWT_EXPIRATION=1h
      - REDIS_PASSWORD=placeholder

# Patches to apply to resources
patches:
  # Example patch to modify resource limits for development environment
  # - path: patches/dev-resources.yaml
  #   target:
  #     kind: Deployment
  #     name: telegram-proxy-service

# Images to be used (can be overridden in overlays)
images:
  - name: ${DOCKER_REGISTRY}/telegram-proxy-service
    newTag: ${IMAGE_TAG}

# Configuration for different environments can be created using overlays
# Example directory structure:
# - base/ (this directory)
# - overlays/
#   - development/
#   - staging/
#   - production/