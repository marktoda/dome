// Define Cloudflare Workers types
export interface Queue<T> {
  send(message: T): Promise<void>;
  sendBatch(messages: T[]): Promise<void>;
}

/**
 * Silo service binding interface
 */
export interface SiloBinding {
  batchGet(data: { ids: string[]; userId?: string | null }): Promise<SiloBatchGetResponse>;
}

/**
 * Silo batch get response
 */
export interface SiloBatchGetResponse {
  items: SiloBatchGetItem[];
  total: number;
  limit: number;
  offset: number;
}

/**
 * Silo batch get item
 */
export interface SiloBatchGetItem {
  id: string;
  userId: string | null;
  contentType: string;
  size: number;
  createdAt: number;
  body?: string;
  url?: string;
}

/**
 * Enriched content message sent to the ENRICHED_CONTENT queue
 */
export interface EnrichedContentMessage {
  id: string;
  userId: string | null;
  contentType: string;
  metadata: EnrichedMetadata;
  timestamp: number;
}

/**
 * Enriched metadata generated by the LLM
 */
export interface EnrichedMetadata {
  title?: string;
  summary?: string;
  todos?: Todo[];
  reminders?: Reminder[];
  topics?: string[];
  sentiment?: 'positive' | 'neutral' | 'negative';
  processingVersion: number;
  modelUsed: string;
}

/**
 * Todo item extracted from content
 */
export interface Todo {
  text: string;
  dueDate?: string; // ISO date if detected
  priority?: 'high' | 'medium' | 'low';
}

/**
 * Reminder item extracted from content
 */
export interface Reminder {
  text: string;
  reminderTime?: string; // ISO date if detected
}
